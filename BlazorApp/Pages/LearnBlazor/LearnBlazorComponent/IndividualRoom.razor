@using BlazorApp.Model
@using System.Threading

<div  class="bg-light border p-2 col-5 " >
   @*@ <input type="checkbox" @onchange="RoomCheckBoxSelectionChanged"/>*@
              <p>Room-@Room.id </p>
             
              <p> <input type="checkbox" @onchange="RoomCheckBoxSelectionChanged"/> @Room.RoomName </p>
             <p>@Room.price.ToString("c")</p> 
              <Input type="checkbox" @bind-value="@Room.isActive" @bind-value:event="oninput" checked="@(Room.isActive? "checked":null)" /> &nbsp; Click to Check Room Availability<br />
    <span> This room  @(Room.isActive? @Room.valid: @Room.inValid)</span><br />
            @if (Room.isActive)
            {
                @foreach (var props in Room.RoomProps)
                {
                    <p>@props.Name - @props.value</p>
                }
            }
              <EditDeleteButton isAdmin="true"></EditDeleteButton>
 </div>

@code{
    [Parameter]
    public BlazorRoom Room{ get; set; }

    [Parameter]
    public  EventCallback<bool> OnRoomCheckBoxSelection{ get; set; }
    protected async Task RoomCheckBoxSelectionChanged(ChangeEventArgs e)
    {
        await OnRoomCheckBoxSelection.InvokeAsync((bool)e.Value);
    }
 } 